<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- Copyright 2009 Combined Conditional Access Development, LLC. -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<body>
<h1>External Route Manager</h1>

<h2>Summary</h2>
<p>Provides a facility for establishing dedicated routes for multiplexing data into DSS stream output.</p>

<h2>TCP Support</h2>
<p>The external route manager supports both Mpeg2 packet and block data received via TCP socket connections from clients.  
TCP routes are not persisted, and therefore are not provisioned through the DSS domain.  If the DSS bundle is stopped, any TCP 
routes currently in use will be lost with no recovery.  When a client wishes to establish a TCP route, they must send a message 
through the DSS broker, through which they will receive a port number from a pool of available connection ports in the 
{@link com.ccadllc.firebird.server.realtime.external.route.manager.impl.TcpRouteManager}.  When they receive that port, they then 
establish a TCP connection with the DSS on that port, which will return a local TCP socket port number through which data can be 
passed.</p>

<p>TCP routes remain open until the stream is finished sending, or if the client drops the connection.  When a TCP route closes and 
the data has been processed, the original connection port is released back to the available connection port pool in the 
{@link com.ccadllc.firebird.server.realtime.external.route.manager.impl.TcpRouteManager}, and the route controller and packet 
filter chain for that TCP route are shutdown and disposed.  If an event is received from the 
{@link com.ccadllc.firebird.dss.server.realtime.snapshot.manager.RealTimeSnapshotManager} that a <code>Stream</code> has been 
deleted, any TCP route that forwards to that stream is altered to reflect that change.</p>

<h3>TCP Mpeg2 support</h3>
<p>When a TCP route is established to handle Mpeg2 packet data, a packet filter chain is constructed to decompose the stream into 
Mpeg2 packets.  Each packet is then handled separately to determine if it does not have a used adaptation field, and then is 
further decomposed into raw block data and routed to the {@link com.ccadllc.firebird.server.realtime.stream.manager.StreamManager} 
for each stream associated with its PID.</p>

<h3>TCP Block support</h3>
<p>When a TCP route is established to handle block data, a packet filter chain is constructed to route the streamed data to the 
{@link com.ccadllc.firebird.server.realtime.stream.manager.StreamManager} for each stream associated with the route when it is 
created.</p>

<h2>UDP Support</h2>
<p>The external route manager has no external interface for UDP routes.  It receives route creation, update and deletion 
OSGi events by registering with the {@link com.ccadllc.firebird.dss.server.realtime.snapshot.manager.RealTimeSnapshotManager}.  
Once an external route is created, a controller opens a port and listens for UDP datagrams.  That port remains open until the
route is deleted.  UDP routes are persisted, and if the bundle is stopped and restarted, they will be recreated.</p>

<h3>UDP Mpeg2 support</h3>
<p>When a UDP route is established to handle Mpeg2 packet data, a packet filter chain is constructed to decompose the UDP datagram 
into Mpeg2 packets.  Each packet is then handled separately to determine if it does not have a used adaptation field, and then is 
further decomposed into raw block data and routed to the {@link com.ccadllc.firebird.server.realtime.stream.manager.StreamManager} 
for each stream associated with its PID.</p>

<h3>UDP Block support</h3>
<p>When a UDP route is established to handle block data, a packet filter chain is constructed to route the payload to the 
{@link com.ccadllc.firebird.server.realtime.stream.manager.StreamManager} for each stream associated with the route when it is 
created.</p>

<h2>Design</h2>
<p>The external route manager consists of the following components:</p>

<ul>
<li>{@link com.ccadllc.firebird.server.realtime.external.route.manager.impl.ExternalRouteManager} handles the OSGi events from
the {@link com.ccadllc.firebird.dss.server.realtime.snapshot.manager.RealTimeSnapshotManager}, manages a
{@link com.ccadllc.firebird.server.realtime.external.route.manager.impl.RouteController} for each route that is established, and
maintains a mapping of {@link com.ccadllc.firebird.dss.server.common.RouteSnapshot} to 
{@link com.ccadllc.firebird.server.realtime.external.route.manager.impl.RouteController} so that those routes can be updated and 
deleted.  When the class is initialized, it loads all {@link com.ccadllc.firebird.dss.server.common.RouteSnapshot} instances from 
the {@link com.ccadllc.firebird.dss.server.realtime.snapshot.manager.RealTimeSnapshotManager} and sets up 
{@link com.ccadllc.firebird.server.realtime.external.route.manager.RouteController} instances for each UDP persisted route.</li>
<li>{@link com.ccadllc.firebird.server.realtime.external.route.manager.impl.ExternalRouteManagerApplicationContextListener} listens 
for when the Spring application context has been refreshed, such as when the bundle is started, or when the
{@link com.ccadllc.firebird.dss.server.realtime.snapshot.manager.RealTimeSnapshotManager} has been restarted.  It then tells the
{@link com.ccadllc.firebird.server.realtime.external.route.manager.ExternalRouteManager} to initialize itself and reload all UDP
routes from the {@link com.ccadllc.firebird.dss.server.realtime.snapshot.manager.RealTimeSnapshotManager}.</li>
<li>{@link com.ccadllc.firebird.server.realtime.external.route.manager.impl.RouteController} manages the TCP or UDP port through 
Apache Mina and forwards acceptable blocks or Mpeg2 packets to the filter chain for the packet's PID so that the packet can be 
forwarded to the appropriate stream.</li>
<li>{@link com.ccadllc.firebird.server.realtime.external.route.manager.RouteControllerHandler} is a specialization of the
{@link org.apache.mina.core.service.IoHandlerAdapter} callback for message reception.  When a datagram is received, it is split 
into Mpeg2 packets, and if the Mpeg2 packet header sync byte is valid and the adaptation field is unused, it is sent back to the 
{@link com.ccadllc.firebird.server.realtime.external.route.manager.RouteController} to be routed by PID.</li>
<li>{@link com.ccadllc.firebird.server.realtime.external.route.manager.PidChainController} manages the filter chain for a
specific PID, so that updates to the streams associated with a PID can be performed.</li>
<li>{@link com.ccadllc.firebird.server.realtime.external.route.manager.Mpeg2BlockTransformer} assembles data blocks from
Mpeg2 packets.</li>
<li>{@link com.ccadllc.firebird.server.realtime.external.route.manager.Inserter} forwards data blocks to the
{@link com.ccadllc.firebird.server.realtime.stream.manager.StreamManager} for each stream associated with a PID.</li>
</ul>

<h2>Bundle Use</h2>
<p>{@link com.ccadllc.firebird.dss.server.realtime.external.route.manager} is exported with this bundle and is what the 
{@link com.ccadllc.firebird.dss.server.provisioning.facade.ProvisioningFacade} uses to access the route manager for
provisioning TCP routes.</p>

<h2>JMX Support</h2>
<h3>Instrumentation</h3>
<p>JMX instrumentation for routes are provided in this bundle for all routes, regardless of protocol or data type.  This 
instrumentation includes:</p>
<ul>
    <li>port</li>
    <li>routeId</li>
    <li>pidMappings (if this is an Mpeg2 packet route)</li>
    <li>streamIds (if this is a block data route)</li>
    <li>properties (if this is a UDP route)</li>
</ul>
<h3>Statistics</h3>
</p>Statistics about data handled by each route are also collected.  These statistics include:</p>
<ul>
<li>Number of Mpeg2 packets handled for PID to stream mappings (Mpeg2 packet data only)</li>
<li>Number of Mpeg2 packets rejected for not having a stream mapping for a PID (Mpeg2 packet data only)</li>
<li>Number of Mpeg2 packets handled for transformation to data blocks, by PID (Mpeg2 packet data only)</li>
<li>Number of Mpeg2 packets rejected while being transformed into data blocks, by PID (Mpeg2 packet data only)</li>
<li>Number of blocks handled (Block data only)</li>
</ul>
<h3>Lookups</h3>
<p>JMX lookups are provided in this bundle for TCP routes (note - UDP route lookups are handled by 
{@link com.ccadllc.firebird.dss.server.realtime.snapshot.manager.impl.RealTimeSnapshotUdpRouteLookup}).  TCP lookups include:</p>
<ul>
    <li>{@com.ccadllc.firebird.dss.server.realtime.external.route.manager.management.TcpRouteLookup#getTcpRouteIdsForStreamId}</li>
    <li>{@com.ccadllc.firebird.dss.server.realtime.external.route.manager.management.TcpRouteLookup#getTcpRouteIdsForMappedPid}</li>
</ul>
<h3>Notifications</h3>
<p>JMX Notifications are provided in this bundle for routes handling Mpeg2 packet data.  These notifications include:</p>
<ul>
<li>Rejection of UDP datagram because it is not divisible by Mpeg2 packet size when it was previously not rejecting</li>
<li>Acceptance of UDP datagram because it is divisible by Mpeg2 packet size when it was previously rejecting</li>
<li>Rejection of Mpeg2 packet because adaptation field is in use when previous packet was not rejected</li>
<li>Acceptance of Mpeg2 packet because adaptation field is not in use when previous packet was rejected</li>
<li>Creation of stream mappings for a PID</li>
<li>Removal of stream mappings for a PID</li>
<li>Rejection of Mpeg2 packet because no stream mapping found for its PID, when it was previously not rejecting for that PID</li>
<li>Rejection of Mpeg2 packet during block transformation when it was previously not rejecting</li>
<ul>
<li>Data block in spanned packet fills the entire packet, but the start bit is set</li>
<li>Packet start bit says block starts in this packet, but none was found</li>
<li>Pointer field offset value is invalid</li>
<li>Section length in data block is less than or equal to 0</li>
</ul>
<li>Acceptance of Mpeg2 packet during block transformation when it previously was rejected</li>
</ul>
<h3>Usage</h3>
<p>To access this JMX data and operations, open a JMX console application (such as JConsole or VisualVM), select the application
runtime, navigate to the MBean view, and select the <code>DSS</code> namespace.  Under the <code>Routes</code> folder, you will see 
the following types of routes displayed:</p>
<ul>
<li>TcpRoutesWithBlocks</li>
<li>TcpRoutesWithMpeg2Packets</li>
<li>UdpRoutesWithBlocks</li>
<li>UdpRoutesWithMpeg2Packets</li>
</ul>
<p>Each of these route types are only shown if routes exist in the system of that specific combination.  Routes are then displayed 
by an indentification number that is unique to that grouping.  When you select a route by that identification number, you will see 
a folder containing the instrumentation attributes, as well folders for any statistics collected about that route.</p>
<p>To subscribe to route notifications, go to the <code>DSS</code> MBean.  Under the <code>Routes</code> folder, you will see the 
<code>Notifications</code> folder.  Click on that folder, and you will see an empty listing of notifications.  Click the 
<code>Subscribe</code> button at the bottom of the view, and all route notifications will be displayed.  Note that you must 
maintain your console application session to see all notifications; if you close the window and start a new session, you will not 
see notifications that occurred while your session was closed.</p>
</body>
</html>